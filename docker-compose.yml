version: "3.8"
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: admindashboard
    ports:
      - "5433:5432" # CHANGED: Host port from 5432 to 5433 to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - god-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d admindashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:admin123@postgres:5432/admindashboard
      NODE_ENV: development
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - god-network
    command: npm run dev
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://localhost:4000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - god-network
    command: npm run dev
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  god-network:
    driver: bridge
