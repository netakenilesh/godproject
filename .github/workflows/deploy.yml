name: 🚀 Deploy to EC2 (Git-Based)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REPO_URL: https://github.com/netakenilesh/godproject.git

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔐 Setup SSH
        run: |
          set -x
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -v -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy using Git on EC2
        run: |
          set -x
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} '
            set -e
            echo "🎯 Starting Git-based deployment..."

            # Ensure Docker is installed
            if ! command -v docker &> /dev/null; then
              echo "🐳 Installing Docker..."
              sudo apt-get update -y
              sudo apt-get install -y docker.io docker-compose
            fi

            # Ensure Git is installed
            if ! command -v git &> /dev/null; then
              echo "📦 Installing Git..."
              sudo apt-get update -y
              sudo apt-get install -y git
            fi

            echo "📦 Setting up application directory..."
            sudo mkdir -p /opt/app
            sudo chown ubuntu:ubuntu /opt/app
            cd /opt/app

            # Clone or pull the repository
            if [ -d ".git" ]; then
              echo "🔄 Pulling latest changes..."
              git pull origin main
            else
              echo "📥 Cloning repository..."
              git clone ${{ env.REPO_URL }} .
            fi

            echo "🔍 Verifying files..."
            ls -la
            ls -la frontend/ || echo "Frontend directory not found"

            if [ ! -f .env.production ]; then
              echo "❌ .env.production missing - create it manually first"
              exit 1
            fi

            echo "🏗️ Building and starting services..."
            sudo docker-compose -f docker-compose.prod.yml down || true
            sudo docker-compose -f docker-compose.prod.yml up --build -d

            echo "⏳ Waiting for services to start..."
            sleep 30

            echo "🗃️ Running database migrations..."
            sudo docker-compose -f docker-compose.prod.yml exec backend npx prisma db push

            echo "✅ Deployment successful!"
          '