name: 🚀 Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🏗️ Build React App
        run: |
          cd frontend
          npm install
          npm run build
          echo "✅ React app built"
          ls -la dist/

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 📤 Transfer files to EC2
        run: |
          # Create deployment package with all necessary files
          tar -czf deployment.tar.gz \
            --exclude='node_modules' \
            --exclude='.git' \
            --exclude='*.log' \
            .
          scp -i ~/.ssh/ec2_key.pem deployment.tar.gz ubuntu@${{ secrets.EC2_HOST }}:/tmp/
          echo "✅ Files transferred to EC2"

      - name: 🚀 Deploy application
        run: |
          ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "
            set -e
            echo '🚀 Starting deployment...'
            
            # Create app directory
            sudo mkdir -p /opt/app
            sudo chown ubuntu:ubuntu /opt/app
            cd /opt/app
            
            # Extract files
            echo '📦 Extracting deployment files...'
            tar -xzf /tmp/deployment.tar.gz
            ls -la
            
            # Verify critical files exist
            echo '🔍 Verifying files...'
            if [ ! -f .env.production ]; then
              echo '❌ .env.production missing - please create it manually'
              exit 1
            fi
            
            if [ ! -d 'frontend/dist' ]; then
              echo '❌ frontend/dist missing - building on EC2...'
              cd frontend
              npm install
              npm run build
              cd ..
            fi
            
            echo '🐳 Starting Docker services...'
            sudo docker-compose -f docker-compose.prod.yml down || true
            sudo docker-compose -f docker-compose.prod.yml up --build -d
            
            echo '⏳ Waiting for services to start...'
            sleep 30
            
            echo '🗃️ Running database migrations...'
            sudo docker-compose -f docker-compose.prod.yml exec backend npx prisma db push
            
            echo '✅ Deployment successful!'
          "

      - name: 🧪 Verify deployment
        run: |
          ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "
            echo '🧪 Running verification checks...'
            
            # Check if containers are running
            echo '📋 Container status:'
            sudo docker-compose ps
            
            # Test backend
            echo '🔧 Testing backend...'
            curl -f http://localhost:4000/api/health && echo '✅ Backend is healthy' || echo '❌ Backend not responding'
            
            # Test frontend through nginx
            echo '🌐 Testing frontend...'
            curl -f http://localhost:8080/ && echo '✅ Frontend is serving' || echo '❌ Frontend not serving'
            
            # Check nginx logs
            echo '📋 Nginx logs (last 10 lines):'
            sudo docker-compose logs nginx --tail=10
          "