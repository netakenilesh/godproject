name: Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer source code to EC2
        run: |
          tar -czf /tmp/source.tar.gz \
            --exclude='node_modules' \
            --exclude='.git' \
            --exclude='dist' \
            --exclude='*.log' \
            .
          scp -i ~/.ssh/ec2_key.pem /tmp/source.tar.gz ubuntu@${{ secrets.EC2_HOST }}:/tmp/

      - name: Deploy and build on EC2
        run: |
          ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "
            set -e
            echo 'Starting deployment...'
            
            # Create app directory
            sudo mkdir -p /opt/app
            sudo chown ubuntu:ubuntu /opt/app
            cd /opt/app
            
            # Extract source code
            echo 'Extracting source code...'
            tar -xzf /tmp/source.tar.gz
            ls -la
            
            # Install Node.js if needed
            if ! command -v node &> /dev/null; then
              echo 'Installing Node.js...'
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            
            # Build React app on EC2
            echo 'Building React app on EC2...'
            cd frontend
            npm install
            npm run build
            cd ..
            
            echo 'Build results:'
            ls -la frontend/dist/
            
            if [ ! -f .env.production ]; then
              echo '.env.production missing - please create it manually'
              exit 1
            fi
            
            echo 'Starting Docker services...'
            sudo docker-compose -f docker-compose.prod.yml down || true
            sudo docker-compose -f docker-compose.prod.yml up --build -d
            
            sleep 30
            
            echo 'Running database migrations...'
            sudo docker-compose -f docker-compose.prod.yml exec backend npx prisma db push
            
            echo 'Deployment successful!'
          "

      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} "
            echo 'Running verification checks...'
            echo 'Container status:'
            sudo docker-compose ps
            echo 'Testing backend...'
            curl -f http://localhost:4000/api/health && echo 'Backend is healthy'
            echo 'Testing frontend...'
            curl -f http://localhost:8080/ && echo 'Frontend is serving'
          "